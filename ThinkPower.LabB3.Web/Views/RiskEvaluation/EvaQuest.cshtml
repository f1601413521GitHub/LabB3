@model ThinkPower.LabB3.Web.ViewModels.EvaQuestViewModel

@{
    ViewBag.Title = "EvaQuest";

    var questEntity = (Model != null &&
        Model.RiskEvaQuestionnaire != null) ?
        Model.RiskEvaQuestionnaire.QuestionnaireEntity :
        null;
    var questDefineEntities = questEntity.QuestDefineEntities;
}

@using (Html.BeginForm("EvaluationRank", "RiskEvaluation", FormMethod.Post, new { id = "evaQuestForm" }))
{
    <div class="container">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (questEntity != null)
        {
            @Html.HiddenFor(x => questEntity.Uid)

            <div class="row question"
                 id="questEntity"
                 data-need-Score="@questEntity.NeedScore"
                 data-quest-Score="@questEntity.QuestScore"
                 data-score-Kind="@questEntity.ScoreKind">

                <div class="col-md-12 question-head">

                    <div class="col-md-12 question-head-title">
                        <span>
                            @Html.DisplayFor(x => questEntity.Name)
                        </span>
                    </div>

                    <div class="question-head-img"
                         style="background-image:url(@questEntity.HeadBackgroundImg);">
                    </div>

                    <div class="col-md-12 question-head-descript">
                        <span>
                            @(new HtmlString(questEntity.HeadDescription))
                        </span>
                    </div>

                </div>

                <div class="col-md-12 question-body">

                    @{
                        var questDefineCount = 0;
                        foreach (var questDefine in questDefineEntities)
                        {
                            questDefineCount++;
                            @Html.HiddenFor(x => questDefine.QuestionId)

                            <!--forloop-->
                            <div class="col-md-12 question-subject"
                                 id="question-@questDefineCount"
                                 data-question-Id="@questDefine.QuestionId"
                                 data-need-Answer="@questDefine.NeedAnswer"
                                 data-allow-Na-Condition="@questDefine.AllowNaCondition"
                                 data-answer-Type="@questDefine.AnswerType"
                                 data-min-Multiple-Answers="@questDefine.MinMultipleAnswers"
                                 data-max-Multiple-Answers="@questDefine.MaxMultipleAnswers"
                                 data-single-Answer-Condition="@questDefine.SingleAnswerCondition"
                                 data-count-Score-Type="@questDefine.CountScoreType">

                                <div class="col-md-12 question-subject-head">

                                    <div class="question-subject-head-no">
                                        <span>@questDefineCount.</span>
                                    </div>

                                    <div class="question-subject-head-descript">
                                        <span>
                                            @Html.DisplayFor(x => questDefine.QuestionContent)
                                        </span>
                                    </div>

                                </div>

                                <div class="col-md-12 question-subject-body">

                                    @{
                                        var answerDefineCount = 0;
                                        foreach (var answerDefine in questDefine.AnswerDefineEntities)
                                        {
                                            answerDefineCount++;

                                            <!--forloop-->
                                            <div class="col-md-6 question-answer"
                                                 id="answer-@questDefineCount-@answerDefineCount"
                                                 data-answer-Code="@answerDefine.AnswerCode"
                                                 data-have-Other-Answer="@answerDefine.HaveOtherAnswer"
                                                 data-need-Other-Answer="@answerDefine.NeedOtherAnswer"
                                                 data-score="@answerDefine.Score">

                                                <div class="question-answer-code">

                                                    @if (questDefine.AnswerType == "S")
                                                    {
                                                        @Html.RadioButton($"answerCode-{questDefine.QuestionId}",
                                                       answerDefine.AnswerCode, new { });
                                                    }
                                                    else if (questDefine.AnswerType == "M")
                                                    {
                                                        @Html.CheckBox($"answerCode-{questDefine.QuestionId}", new { });
                                                    }
                                                    else if (questDefine.AnswerType == "F")
                                                    {
                                                        @Html.TextBox($"answerCode-{questDefine.QuestionId}", null, new { });
                                                    }

                                                </div>

                                                <div class="question-answer-descript">
                                                    <span>
                                                        @Html.DisplayFor(x => answerDefine.AnswerContent)
                                                    </span>
                                                </div>

                                                <div class="question-answer-other">
                                                    @if (answerDefine.HaveOtherAnswer == "Y")
                                                    {
                                                        @Html.TextBox($"otherAnswer-{questDefine.QuestionId}", null, new { });
                                                    }
                                                </div>

                                            </div>
                                        }
                                    }

                                </div>

                                <div class="col-md-12 question-subject-footer"
                                     id="footer-@questDefineCount">

                                    <div class="col-md-12 question-subject-footer-tip"
                                         id="tip-@questDefineCount">
                                        <span></span>
                                    </div>

                                </div>

                            </div>
                        }
                    }

                </div>

                <div class="col-md-12 question-footer">

                    <div class="col-md-12 question-footer-descript">
                        <span>
                            @(new HtmlString(questEntity.FooterDescription))
                        </span>
                    </div>

                    <div class="col-md-10 col-md-offset-5 question-footer-submit">
                        <input id="done" type="button" value="確定" />
                    </div>

                </div>

            </div>
        }

    </div>
}


@section scripts{
    <script src="~/Scripts/EvaQuest.js"></script>
}
